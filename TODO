- Ich glaube man muss BCOs abstrakter behandeln, etwa in dem man zwar
  reinschaut, was referenziert wird, aber nur Kanten zu Kästchen zieht, die eh
  schon sichtbar sind. Dadurch würde in meinem Beispiel von dem BCO von m aus
  eine Kante zu n gehen, aber sonst keine Internas sichtbar sein. Denk dran
  dass die (bzw. eine) Ausgabe auch für Haskell-Anfänger geeignet sein sollte.

  Möglichkeiten:
  - Nach walkHeap HeapMap aussortieren
    Beide Visualisierungen müssen dann bei BCOs in die Tiefe gehen und schauen ob vorkommt.

- Sometimes :switch, :view, :clear hang

- Show types (see GHCi)

- find out where a Thunk closure comes from and additional information about it

- Und noch ein feature-request für wenn noch Zeit ist: Der GHCi-Debugger kann
  die macht die Namen der thunks (t6 etc.) auch in GHCi verfügbar; das kann
  dein Tool noch nicht. Vermutlich musst du dafür aber den Typen inferieren,
  was möglich ist (GHCi machts ja und den Code müsste man eigentlich auch
  übernehmen können).

- Generalize interactive xdot viewer into a seperate library
